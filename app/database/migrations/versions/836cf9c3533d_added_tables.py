"""Added tables

Revision ID: 836cf9c3533d
Revises:
Create Date: 2022-04-07 23:41:05.566959

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = '836cf9c3533d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'facilities',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('url', sa.Text(), nullable=False),
        sa.Column('api_key', sa.Text(), nullable=False),
        sa.Column('sandbox_api_key', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'policies',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.Text(), nullable=False),
        sa.Column('category', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'ratings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('name_long', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=False),
        sa.Column('name_long', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'website_logs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('ip', sa.Text(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=True),
        sa.Column('user_name', sa.Text(), nullable=True),
        sa.Column('action', sa.Text(), nullable=False),
        sa.Column('old_data', sa.JSON(), nullable=False),
        sa.Column('new_data', sa.JSON(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.Text(), nullable=False),
        sa.Column('last_name', sa.Text(), nullable=False),
        sa.Column('preferred_first_name', sa.Text(), nullable=False),
        sa.Column('preferred_last_name', sa.Text(), nullable=False),
        sa.Column('email', sa.Text(), nullable=False),
        sa.Column('rating', sa.Integer(), nullable=True),
        sa.Column('discord', sa.Text(), nullable=False),
        sa.Column('transfer_override', sa.Boolean(), nullable=True),
        sa.Column('is_home_region', sa.Boolean(), nullable=True),
        sa.Column('email_opt_in', sa.Boolean(), nullable=True),
        sa.Column('facility', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['facility'], ['facilities.id'], name='fk_users_facilities_id_facility'),
        sa.ForeignKeyConstraint(['rating'], ['ratings.id'], name='fk_users_ratings_id_rating'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'comments',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.Column('title', sa.Text(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_comments_users_id_user'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'tickets',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_tickets_users_id_user'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'trainings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.Column('submitter', sa.Integer(), nullable=True),
        sa.Column('type', sa.Text(), nullable=False),
        sa.Column('facility', sa.String(length=3), nullable=False),
        sa.Column('position', sa.String(length=10), nullable=False),
        sa.Column('notes', sa.Text(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['submitter'], ['users.id'], name='fk_trainings_users_id_submitter'),
        sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_trainings_users_id_user'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'users_facilitys',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('facility', sa.Integer(), nullable=True),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['facility'], ['facilities.id'],
            name='fk_users_facilitys_facilities_facility_id',
            onupdate='CASCADE', ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user'], ['users.id'], name='fk_users_facilitys_users_user_id',
            onupdate='CASCADE', ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'users_roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('role', sa.Integer(), nullable=True),
        sa.Column('user', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['role'], ['roles.id'], name='fk_users_roles_roles_role_id',
            onupdate='CASCADE', ondelete='CASCADE',
        ),
        sa.ForeignKeyConstraint(
            ['user'], ['users.id'], name='fk_users_roles_users_user_id',
            onupdate='CASCADE', ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_roles')
    op.drop_table('users_facilitys')
    op.drop_table('trainings')
    op.drop_table('tickets')
    op.drop_table('comments')
    op.drop_table('users')
    op.drop_table('website_logs')
    op.drop_table('roles')
    op.drop_table('ratings')
    op.drop_table('policies')
    op.drop_table('facilities')
    # ### end Alembic commands ###
